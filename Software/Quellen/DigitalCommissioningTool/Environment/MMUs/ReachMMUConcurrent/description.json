{"Name":"ReachMMUConcurrent","ID":"e6e2a4e4-fbb9-41b7-bc3a-3d553168bb56","AssemblyName":"ReachMMUConcurrent.dll","MotionType":"Pose/Reach","MotionSubType":"","Language":"C#","Author":"Felix Gaisbauer","Version":"1.0","Prerequisites":null,"SupportedProportions":null,"Properties":null,"Dependencies":null,"Events":[],"LongDescription":"A reach MMU realized using inverse kinematics. The MMU allows the execution of left and right hand reaches simultaniously.","ShortDescription":"A reach MMU which allows concurrent states.","Parameters":[{"Name":"TargetID","Type":"ID","Description":"The id of the target location (object) or MGeometryConstraint","Required":true},{"Name":"Hand","Type":"{Left,Right}","Description":"The hand of the reach motion","Required":true},{"Name":"SingleShotIK","Type":"bool","Description":"Specifies if the ik is used once for the initial computation and blending is carried out afterwards.","Required":false},{"Name":"Velocity","Type":"float","Description":"Specifies the velocity of the reaching.","Required":false},{"Name":"AngularVelocity","Type":"float","Description":"Specifies the angular velocity of the reaching.","Required":false},{"Name":"MinDistance","Type":"float","Description":"Specifies the minmum distance at which the reaching can be started (used for check prerequisites).","Required":false},{"Name":"Debug","Type":"bool","Description":"Specifies wheather debug output should be displayed.","Required":false},{"Name":"Trajectory","Type":"MPathConstraint","Description":"Optionally defined trajectory for reaching.","Required":false}],"SceneParameters":null,"RequiredServices":null,"__isset":{"MotionSubType":true,"Prerequisites":false,"SupportedProportions":false,"Properties":false,"Dependencies":false,"Events":true,"LongDescription":true,"ShortDescription":true,"Parameters":true,"SceneParameters":false,"RequiredServices":false}}